# Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие
# только чисел. Проверить работу исключения на реальном примере.
# \Запрашивать у пользователя данные и заполнять список необходимо только числами.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
# пока пользователь сам не остановит работу скрипта, введя, например, команду «stop».
# При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
# Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
# Вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число)
# и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
class ExceptionNumbers(Exception):
    def __init__(self, t):
        self.text = t

    @classmethod
    def numbers(*args):
        new_list = []
        try:
            for el in your_numbers:
                try:
                    el = int(el)
                    new_list.append(el)
                except:
                    raise ExceptionNumbers("Это не число")
        except ExceptionNumbers as error:
            print(error)
        return new_list


a = ExceptionNumbers("Это не число")
z = []

while True:
    your_numbers = input("введите строку числе через пробел").split()
    if your_numbers[-1] != "stop":
        z = z + a.numbers(your_numbers)
        print(z)

    elif your_numbers[-1] == "stop":
        your_numbers = your_numbers[:-1]
        b = a.numbers(your_numbers)
        z += b
        print(z)
        break
